@mixin maxWidth($q) {
  @media screen and (max-width: $q) {
    @content;
  }
}
@mixin minWidth($q) {
  @media screen and (min-width: $q) {
    @content;
  }
}
@mixin size($width, $height: $width) {
  width: $width;
  height: $height;
}

@mixin centerPosition($pos) {
  position: absolute;
  @if $pos == "both" {
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
  } @else if $pos == "x" {
    left: 50%;
    transform: translateX(-50%);
  } @else if $pos == "y" {
    top: 50%;
    transform: translateY(-50%);
  }
}

@mixin absoluteFull() {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

@mixin textGradient($color1: $primary-color, $color2: $secondary-color) {
  color: transparent;
  background-clip: text;
  -webkit-background-clip: text;
  background-image: linear-gradient(to bottom right, $color1, $color2);
}

@mixin gradient($color1: $primary-color, $color2: $secondary-color, $alpha1: 1, $alpha2: 1, $direction: to bottom right) {
  background-image: linear-gradient($direction, rgba($color1, $alpha1), rgba($color2, $alpha2));
}

@mixin flexCenter() {
  display: flex;
  justify-content: center;
  align-items: center;
}

@mixin flex($items: stretch, $content: flex-start, $direction: row, $wrap: nowrap, $flex: flex) {
  align-items: $items;
  justify-content: $content;
  flex-direction: $direction;
  display: $flex;
  flex-wrap: $wrap;
}


@mixin textClamp($rows: 1, $size: 100%) {
  display: -webkit-box;
  -webkit-line-clamp: $rows;
  -webkit-box-orient: vertical;
  overflow: hidden;
  text-overflow: ellipsis;
  width: $size;
  max-width: $size;
  white-space: pre-wrap;
  word-break: break-word;
}

@mixin dotSeparate($pos, $color: $gray, $size: 3.2px) {
  position: relative;
  @if $pos == "left" {
    padding-left: 5px;
    margin-left: 5px;
  } @else if $pos == "right" {
    padding-right: 5px;
    margin-right: 5px;
  }
  &::before {
    content: "";
    position: absolute;
    top: 50%;
    @include size($size);
    border-radius: 50%;
    background-color: $color;
    @if $pos == "left" {
      left: 0;
      transform: translate(-50%, -50%);
    } @else if $pos == "right" {
      right: 0;
      transform: translate(50%, -50%);
    }
  }
}

@mixin boxShadow($color: $gray, $alpha: 0.05) {
  box-shadow: 0 2px 2px rgba($color, $alpha), 0 4px 4px rgba($color, $alpha), 0 8px 8px rgba($color, $alpha), 0 16px 16px rgba($color, $alpha);
}

@mixin gridLayout($gap: 20px, $fit: "no-fit", $fit-min: 293px, $fill-min: 280px) {
  &-list {
    display: grid;
    grid-gap: $gap;
    grid-template-columns: repeat(auto-fill, minmax($fill-min, 1fr));
    @if $fit == "fit" {
      grid-template-columns: repeat(auto-fit, minmax($fit-min, 1fr));
    }
  }
  &-item {
    background-color: $white;
    height: auto;
    overflow: hidden;
    border-radius: 5px;
    transition: 0.4s;
  }
}




